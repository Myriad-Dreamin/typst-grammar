# This workflow build grammars
name: Build Grammar

on:
  workflow_dispatch:
  push:
    branches: [ "main", "build" ]
  pull_request:
    types: [opened, synchronize]
    branches: [ "main", "build" ]

env:
  TINYMIST_REF: v0.12.18
  NODE_VERSION: 22.x

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/checkout@v4
      with:
        # Repository name with owner. For example, actions/checkout
        # Default: ${{ github.repository }}
        repository: 'Myriad-Dreamin/tinymist'
        # The branch, tag or SHA to checkout. When checking out the repository that
        # triggered a workflow, this defaults to the reference or SHA for that event.
        # Otherwise, uses the default branch.
        ref: ${{ env.TINYMIST_REF }}
        # Relative path under $GITHUB_WORKSPACE to place the repository
        path: 'tinymist'
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. 
        # It will generate hash from the target file for primary key. It works only If cache is specified.  
        # Supports wildcards or a list of file names for caching multiple dependencies.
        # Default: ''
        cache-dependency-path: 'tinymist/yarn.lock'
        cache: 'yarn'
    - run: yarn install
      working-directory: tinymist
    - run: yarn compile
      working-directory: tinymist/syntaxes/textmate
    - run: |
        mv typst.tmLanguage.json typst.tinymist.tmLanguage.json
        mv typst-code.tmLanguage.json typst-code.tinymist.tmLanguage.json
        cat > feature.mts << EOF
        export const SYNTAX_WITH_BOLD_ITALIC = true;
        export const SYNTAX_WITH_MATH = true;
        export const SYNTAX_WITH_LANGS = false;
        export const POLYFILL_P_XID = true;
        export const FIXED_LENGTH_LOOK_BEHIND = true;
        EOF
        yarn compile
      working-directory: tinymist/syntaxes/textmate
    - name: Upload built typst.tmLanguage.json
      uses: actions/upload-artifact@v4
      with:
        name: typst.tmLanguage.json
        path: tinymist/syntaxes/textmate/typst.tmLanguage.json
    - name: Upload built typst-code.tmLanguage.json
      uses: actions/upload-artifact@v4
      with:
        name: typst-code.tmLanguage.json
        path: tinymist/syntaxes/textmate/typst-code.tmLanguage.json
    - name: Upload built typst.tinymist.tmLanguage.json
      uses: actions/upload-artifact@v4
      with:
        name: typst.tinymist.tmLanguage.json
        path: tinymist/syntaxes/textmate/typst.tinymist.tmLanguage.json
    - name: Upload built typst-code.tinymist.tmLanguage.json
      uses: actions/upload-artifact@v4
      with:
        name: typst-code.tinymist.tmLanguage.json
        path: tinymist/syntaxes/textmate/typst-code.tinymist.tmLanguage.json

  commit:
    needs: build
    if: github.ref == 'refs/heads/build'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Checkout to main
      run: |
        git config --global user.email "camiyoru@gmail.com"
        git config --global user.name "Myriad-Dreamin"
        git checkout -b build-${{ env.TINYMIST_REF }}-${{ github.run_number }}
        git fetch origin main
        git reset --hard origin/main
    - name: download built grammars
      uses: actions/download-artifact@v4
      with:
        name: typst.tmLanguage.json
        path: .
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: pretty json using node `JSON`
      run: |
        cat > pretty.cjs << EOF
        const fs = require('fs');
        const content = fs.readFileSync('typst.tmLanguage.json', 'utf-8');
        console.log("content read", typeof content, content.length);
        const json = JSON.parse(content);
        const prettied = JSON.stringify(json, null, 1);
        fs.writeFileSync('typst.tmLanguage.json', prettied);
        EOF
        node pretty.cjs        
    - name: Create a new branch
      run: |
        mkdir -p grammars
        mv typst.tmLanguage.json grammars/typst.tmLanguage.json
        cat > build-ref.json << EOF
        {
          "tinymist-ref": "${{ env.TINYMIST_REF }}",
          "github-ref": "${{ github.sha }}"
        }
        EOF
        cat > build-ref.md << EOF
        [tinymist-ref](https://github.com/Myriad-Dreamin/tinymist/commit/${{ env.TINYMIST_REF }})
        [github-ref](https://github.com/Myriad-Dreamin/typst-grammar/commit/${{ github.sha }})
        EOF
        git add build-ref.json build-ref.md
        git add grammars/typst.tmLanguage.json
        git commit -m "build: update grammars/typst.tmLanguage.json"
        git push origin build-${{ env.TINYMIST_REF }}-${{ github.run_number }}
